[{"C:\\Users\\Lui12\\PhpstormProjects\\LRbackup\\my-react\\src\\index.js":"1","C:\\Users\\Lui12\\PhpstormProjects\\LRbackup\\my-react\\src\\App.js":"2","C:\\Users\\Lui12\\PhpstormProjects\\LRbackup\\my-react\\src\\reportWebVitals.js":"3","C:\\Users\\Lui12\\PhpstormProjects\\LRbackup\\my-react\\src\\components\\product\\list.components.js":"4","C:\\Users\\Lui12\\PhpstormProjects\\LRbackup\\my-react\\src\\components\\product\\edit.components.js":"5","C:\\Users\\Lui12\\PhpstormProjects\\LRbackup\\my-react\\src\\components\\product\\create.components.js":"6"},{"size":535,"mtime":1697907771183,"results":"7","hashOfConfig":"8"},{"size":1150,"mtime":1697922905666,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1697907771307,"results":"10","hashOfConfig":"8"},{"size":4226,"mtime":1697932214371,"results":"11","hashOfConfig":"8"},{"size":5264,"mtime":1697929393369,"results":"12","hashOfConfig":"8"},{"size":4675,"mtime":1697929393359,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"cpm910",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Lui12\\PhpstormProjects\\LRbackup\\my-react\\src\\index.js",[],[],"C:\\Users\\Lui12\\PhpstormProjects\\LRbackup\\my-react\\src\\App.js",[],[],"C:\\Users\\Lui12\\PhpstormProjects\\LRbackup\\my-react\\src\\reportWebVitals.js",[],[],"C:\\Users\\Lui12\\PhpstormProjects\\LRbackup\\my-react\\src\\components\\product\\list.components.js",[],[],"C:\\Users\\Lui12\\PhpstormProjects\\LRbackup\\my-react\\src\\components\\product\\edit.components.js",["33"],[],"import React, { useEffect, useState } from \"react\";\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { useNavigate, useParams } from 'react-router-dom'\r\nimport axios from 'axios';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport default function EditUser() {\r\n    const navigate = useNavigate();\r\n\r\n    const { id } = useParams()\r\n\r\n    const [title, setTitle] = useState(\"\")\r\n    const [description, setDescription] = useState(\"\")\r\n    const [validationError,setValidationError] = useState({})\r\n\r\n    useEffect(()=>{\r\n        fetchProduct()\r\n    },[])\r\n\r\n    const fetchProduct = async () => {\r\n        await axios.get(`http://localhost:8000/api/products/${id}`).then(({data})=>{\r\n            const { title, description } = data.product\r\n            setTitle(title)\r\n            setDescription(description)\r\n        }).catch(({response:{data}})=>{\r\n            Swal.fire({\r\n                text:data.message,\r\n                icon:\"error\"\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n\r\n    const updateProduct = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData()\r\n        formData.append('_method', 'PATCH');\r\n        formData.append('title', title)\r\n        formData.append('description', description)\r\n\r\n\r\n        await axios.post(`http://localhost:8000/api/products/${id}`, formData).then(({data})=>{\r\n            Swal.fire({\r\n                icon:\"success\",\r\n                text:data.message\r\n            })\r\n            navigate(\"/\")\r\n        }).catch(({response})=>{\r\n            if(response.status===422){\r\n                setValidationError(response.data.errors)\r\n            }else{\r\n                Swal.fire({\r\n                    text:response.data.message,\r\n                    icon:\"error\"\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">\r\n                <div className=\"col-12 col-sm-12 col-md-6\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body\">\r\n                            <h4 className=\"card-title\">Update Product</h4>\r\n                            <hr />\r\n                            <div className=\"form-wrapper\">\r\n                                {\r\n                                    Object.keys(validationError).length > 0 && (\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-12\">\r\n                                                <div className=\"alert alert-danger\">\r\n                                                    <ul className=\"mb-0\">\r\n                                                        {\r\n                                                            Object.entries(validationError).map(([key, value])=>(\r\n                                                                <li key={key}>{value}</li>\r\n                                                            ))\r\n                                                        }\r\n                                                    </ul>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    )\r\n                                }\r\n                                <Form onSubmit={updateProduct}>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <Form.Group controlId=\"Name\">\r\n                                                <Form.Label>Title</Form.Label>\r\n                                                <Form.Control type=\"text\" value={title} onChange={(event)=>{\r\n                                                    setTitle(event.target.value)\r\n                                                }}/>\r\n                                            </Form.Group>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row className=\"my-3\">\r\n                                        <Col>\r\n                                            <Form.Group controlId=\"Description\">\r\n                                                <Form.Label>Description</Form.Label>\r\n                                                <Form.Control as=\"textarea\" rows={3} value={description} onChange={(event)=>{\r\n                                                    setDescription(event.target.value)\r\n                                                }}/>\r\n                                            </Form.Group>\r\n                                        </Col>\r\n                                    </Row>\r\n\r\n                                    <Button variant=\"primary\" className=\"mt-2\" size=\"lg\" block=\"block\" type=\"submit\">\r\n                                        Update\r\n                                    </Button>\r\n                                </Form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","C:\\Users\\Lui12\\PhpstormProjects\\LRbackup\\my-react\\src\\components\\product\\create.components.js",[],[],{"ruleId":"34","severity":1,"message":"35","line":21,"column":7,"nodeType":"36","endLine":21,"endColumn":9,"suggestions":"37"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchProduct'. Either include it or remove the dependency array.","ArrayExpression",["38"],{"desc":"39","fix":"40"},"Update the dependencies array to be: [fetchProduct]",{"range":"41","text":"42"},[669,671],"[fetchProduct]"]